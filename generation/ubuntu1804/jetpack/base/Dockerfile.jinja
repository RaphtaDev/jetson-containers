{%- if ctx.drivers.version == "32.4.3" or ctx.drivers.version == "32.4.4" %}
ARG IMAGE_NAME
FROM ${IMAGE_NAME}:{{ ctx.drivers.version }}-{{ ctx.shortName }}

LABEL com.nvidia.jetpack.version="{{ ctx.jetpackVersion }}"

ENV CUDA_VERSION "{{ ctx.cuda.toolkit.version }}"

LABEL com.nvidia.cuda.version="${CUDA_VERSION}"

RUN apt-get update && \
    apt-get install -y --no-install-recommends --allow-downgrades cuda-cudart-10-2 cuda-nvtx-10-2 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

{%- elif ctx.drivers.version == "32.3.1" %}
ARG IMAGE_NAME
FROM ${IMAGE_NAME}:{{ ctx.drivers.version }}-{{ ctx.shortName }}

LABEL com.nvidia.jetpack.version="{{ ctx.jetpackVersion }}"

ENV CUDA_VERSION "{{ ctx.cuda.toolkit.version }}"

LABEL com.nvidia.cuda.version="${CUDA_VERSION}"

RUN apt-get update && \
    apt-get install -y --no-install-recommends --allow-downgrades cuda-cudart-10-0 cuda-nvtx-10-0 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

{% else -%}
ARG DEPENDENCIES_IMAGE
ARG IMAGE_NAME
FROM ${DEPENDENCIES_IMAGE} as dependencies

ARG IMAGE_NAME
FROM ${IMAGE_NAME}:{{ ctx.drivers.version }}-{{ ctx.shortName }}

LABEL com.nvidia.jetpack.version="{{ ctx.jetpackVersion }}"

ENV CUDA_VERSION "{{ ctx.cuda.toolkit.version }}"

LABEL com.nvidia.cuda.version="${CUDA_VERSION}"

# Prereqs

RUN apt-get update && \
    apt-get install -y --no-install-recommends gnupg \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# CUDA Runtime for L4T

COPY --from=dependencies /data/{{ ctx.cuda.toolkit.fileName }} {{ ctx.cuda.toolkit.fileName }}
RUN echo "{{ ctx.cuda.toolkit.checksum }} {{ ctx.cuda.toolkit.fileName }}" | md5sum -c - && \
    dpkg --force-all -i {{ ctx.cuda.toolkit.fileName }} && \
    rm {{ ctx.cuda.toolkit.fileName }} && \
    apt-key add /var/cuda-repo-*-local*/*.pub && \
    apt-get update && \
    apt-get install -y --no-install-recommends --allow-downgrades cuda-cudart-10-0 cuda-nvtx-10-0 && \
    dpkg --purge cuda-repo-l4t-10-0-local-{{ ctx.cuda.toolkit.version }} \
    && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

{% endif %}

{%- if ctx.drivers.version == "32.4.3" or ctx.drivers.version == "32.4.4" %}
RUN ln -s /usr/local/cuda-10.2 /usr/local/cuda && \
    ln -s /usr/local/cuda-10.2/targets/aarch64-linux/include /usr/local/cuda/include && \
    ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib /usr/local/cuda/lib64

RUN echo "/usr/lib/aarch64-linux-gnu/tegra" >> /etc/ld.so.conf.d/nvidia-tegra.conf && \
    echo "/usr/lib/aarch64-linux-gnu/tegra-egl" >> /etc/ld.so.conf.d/nvidia-tegra.conf && \
    echo "/usr/local/cuda-10.2/targets/aarch64-linux/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    ldconfig
{%- else %}
RUN ln -s /usr/local/cuda-10.0 /usr/local/cuda && \
    ln -s /usr/local/cuda-10.0/targets/aarch64-linux/include /usr/local/cuda/include && \
    ln -s /usr/local/cuda-10.0/targets/aarch64-linux/lib /usr/local/cuda/lib64

RUN echo "/usr/lib/aarch64-linux-gnu/tegra" >> /etc/ld.so.conf.d/nvidia-tegra.conf && \
    echo "/usr/lib/aarch64-linux-gnu/tegra-egl" >> /etc/ld.so.conf.d/nvidia-tegra.conf && \
    echo "/usr/local/cuda-10.0/targets/aarch64-linux/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    ldconfig
{%- endif %}

RUN export LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH} && \
    export LIBRARY_PATH=/usr/local/cuda/lib64/stubs && \
    grep -q "export PATH=.*/usr/local/cuda/bin" ~/.bashrc || echo "export PATH=/usr/local/cuda/bin:$PATH">>~/.bashrc && \
    grep -q "export LD_LIBRARY_PATH=/usr/local/cuda/lib64" ~/.bashrc || echo "export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH" >> ~/.bashrc && \
    grep -q "export PATH=.*/usr/local/cuda/bin" /etc/skel/.bashrc || echo "export PATH=/usr/local/cuda/bin:$PATH">>/etc/skel/.bashrc && \
    grep -q "export LD_LIBRARY_PATH=/usr/local/cuda/lib64" /etc/skel/.bashrc || echo "export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH" >> /etc/skel/.bashrc

ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES all
